DROP TABLE IF EXISTS film, Mpa, Likes, Genre, Genre_list, User_filmorate, Friends;

CREATE TABLE IF NOT EXISTS Film (
  unit_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name_film varchar NOT NULL,
  description_film varchar,
  releaseDate_film date NOT NULL,
  duration_film integer NOT NULL,
  mpa_id integer
);

CREATE TABLE IF NOT EXISTS Mpa (
  mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name_mpa varchar NOT NULL,
  description_mpa varchar
);

CREATE TABLE IF NOT EXISTS Likes (
  user_id integer NOT NULL,
  film_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Genre (
  genre_id integer NOT NULL,
  film_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Genre_list (
  generelist_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description_genre varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS User_filmorate (
  user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email_user varchar NOT NULL,
  login_user varchar NOT NULL,
  name_user varchar NOT NULL,
  birthday_user date
);

CREATE TABLE IF NOT EXISTS Friends (
  friends_id integer NOT NULL,
  user_id integer NOT NULL,
  friendship_status BOOLEAN NOT NULL default false
);

ALTER TABLE Film ADD FOREIGN KEY (mpa_id) REFERENCES Mpa (mpa_id);

ALTER TABLE Likes ADD FOREIGN KEY (user_id) REFERENCES User_filmorate (user_id);

ALTER TABLE Likes ADD FOREIGN KEY (film_id) REFERENCES Film (unit_id);

ALTER TABLE Genre ADD FOREIGN KEY (genre_id) REFERENCES Genre_list (generelist_id);

ALTER TABLE Genre ADD FOREIGN KEY (film_id) REFERENCES Film (unit_id);

ALTER TABLE Friends ADD FOREIGN KEY (friends_id) REFERENCES User_filmorate (user_id);

ALTER TABLE Friends ADD FOREIGN KEY (user_id) REFERENCES User_filmorate (user_id);

CREATE UNIQUE INDEX IF NOT EXISTS user_filmorate_id_uindex ON User_filmorate (user_id);

CREATE UNIQUE INDEX IF NOT EXISTS film_id_uindex ON Film (unit_id);

CREATE UNIQUE INDEX IF NOT EXISTS mpa_id_uindex ON Mpa (mpa_id);

CREATE UNIQUE INDEX IF NOT EXISTS genre_list_id_uindex ON Genre_list (generelist_id);